链表常见面试题（续）

给定两个可能有环也可能无环的单链表，头节点head1和head2。请实现一个函数，如果两个链表相交，请返回相交的 第一个节点。如果不相交，返回null
【要求】
如果两个链表长度之和为N，时间复杂度请达到O(N)，额外空间复杂度 请达到O(1)。
    解题思路：
    1) 判断单链表是否有环
    2) 都没有环的情况
    3) 都有环的情况
    4) 有一个有环的情况---返回null

二叉树的先序、中序、后序遍历（深度优先遍历）
先序：任何子树的处理顺序都是，先头节点、再左子树、然后右子树
中序：任何子树的处理顺序都是，先左子树、再头节点、然后右子树
后序：任何子树的处理顺序都是，先左子树、再右子树、然后头节点

实现二叉树的按层遍历
1）其实就是宽度优先遍历，用队列
2）可以通过设置flag变量的方式，来发现某一层的结束（看题目）


